export declare class Mapper<TSource, TTarget> {
    private sourceType;
    private targetType;
    private mappings;
    constructor(sourceType: new () => TSource, targetType: new () => TTarget);
    /**
     * map corresponding property directly, 'deep' indicates whether to deep clone this property
     * @param propertyKey
     * @param deep
     * @returns
     */
    directMap(propertyKey: keyof TTarget | Array<keyof TTarget>, deep?: boolean): this;
    /**
     * map corresponding property by a mapping function, expecting mapping function to have a return value
     * @param propertyKey
     * @param mappingFn
     * @returns
     */
    map(propertyKey: keyof TTarget, mappingFn: (source: TSource) => any): this;
    private _map;
    /**
     * map an object of source type to an object of target type
     * @param source
     * @returns
     */
    exec(source: TSource): TTarget;
}
